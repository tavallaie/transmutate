name: Publish to PyPI

on:
  push:
    paths:
      - 'pyproject.toml'  # Trigger only on changes to pyproject.toml
    branches:
      - main

jobs:
  check_version:
    name: Check Version Change
    runs-on: ubuntu-latest

    outputs:
      current_version: ${{ steps.extract_current_version.outputs.current_version }}
      tag_version: ${{ steps.extract_tag_version.outputs.tag_version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for tags

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install poetry
      uses: abatilo/actions-poetry@v2

    - name: Get current version from pyproject.toml
      id: extract_current_version
      run: |
        CURRENT_VERSION=$(poetry version --short)
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_ENV
        echo "::set-output name=current_version::$CURRENT_VERSION"

    - name: Get latest tag
      id: extract_tag_version
      run: |
        # Get the latest tag and remove the 'v' prefix
        LATEST_TAG=$(git describe --tags --abbrev=0)
        TAG_VERSION=${LATEST_TAG#v}
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
        echo "tag_version=$TAG_VERSION" >> $GITHUB_ENV
        echo "::set-output name=tag_version::$TAG_VERSION"

    - name: Log Version Information
      run: |
        echo "Current version: ${{ steps.extract_current_version.outputs.current_version }}"
        echo "Latest tag: ${{ env.LATEST_TAG }}"
        echo "Extracted version from tag: ${{ steps.extract_tag_version.outputs.tag_version }}"

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: check_version
    if: needs.check_version.outputs.current_version != needs.check_version.outputs.tag_version  # Proceed only if the version has changed

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for tags

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install poetry
      uses: abatilo/actions-poetry@v2

    - name: Publish to PyPI using Trusted Publisher
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Default GitHub Actions token for trusted publishing
      run: |
        echo "Publishing to PyPI because the version has changed from ${{ needs.check_version.outputs.tag_version }} to ${{ needs.check_version.outputs.current_version }}"
        poetry publish --build --no-interaction

    - name: Create a new tag
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git tag v${{ needs.check_version.outputs.current_version }}
        git push origin --tags
